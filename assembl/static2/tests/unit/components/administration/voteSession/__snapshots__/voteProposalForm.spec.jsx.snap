// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VoteProposalForm component should render an empty form to create a vote proposal with validation errors 1`] = `
<div
  className="form-container vote-proposal-form"
>
  <div
    className="pointer right"
  >
    <div
      className="inline"
    >
      
    </div>
  </div>
  <div
    className="title"
  >
    <Translate
      number={1}
      value="administration.voteProposals.defineProposal"
    />
  </div>
  <FormControlWithLabel
    componentClass={undefined}
    disabled={undefined}
    formControlProps={undefined}
    helperText={undefined}
    helperUrl=""
    id={undefined}
    label="Title of the proposal"
    labelAlwaysVisible={false}
    name={undefined}
    onChange={[Function]}
    required={true}
    type="text"
    validationErrors={
      Array [
        Object {
          "code": "error.required",
          "vars": Object {},
        },
      ]
    }
    value={null}
  />
  <FormControlWithLabel
    componentClass={undefined}
    disabled={undefined}
    formControlProps={undefined}
    helperText={undefined}
    helperUrl=""
    id={undefined}
    label="Description"
    labelAlwaysVisible={false}
    name={undefined}
    onChange={[Function]}
    required={true}
    type="rich-text"
    validationErrors={undefined}
    value={null}
  />
  <FormGroup
    bsClass="form-group"
    validationState={null}
  >
    Immutable.List [
    ]
    Immutable.List [
    ]
  </FormGroup>
  <div
    className="separator"
  />
</div>
`;

exports[`VoteProposalForm component should render an empty form to create a vote proposal without any checkbox below 1`] = `
<div
  className="form-container vote-proposal-form"
>
  <div
    className="pointer right"
  >
    <div
      className="inline"
    >
      
    </div>
  </div>
  <div
    className="title"
  >
    <Translate
      number={1}
      value="administration.voteProposals.defineProposal"
    />
  </div>
  <FormControlWithLabel
    componentClass={undefined}
    disabled={undefined}
    formControlProps={undefined}
    helperText={undefined}
    helperUrl=""
    id={undefined}
    label="Title of the proposal"
    labelAlwaysVisible={false}
    name={undefined}
    onChange={[Function]}
    required={true}
    type="text"
    validationErrors={undefined}
    value={null}
  />
  <FormControlWithLabel
    componentClass={undefined}
    disabled={undefined}
    formControlProps={undefined}
    helperText={undefined}
    helperUrl=""
    id={undefined}
    label="Description"
    labelAlwaysVisible={false}
    name={undefined}
    onChange={[Function]}
    required={true}
    type="rich-text"
    validationErrors={undefined}
    value={null}
  />
  <FormGroup
    bsClass="form-group"
    validationState={null}
  >
    Immutable.List [
    ]
    Immutable.List [
    ]
  </FormGroup>
  <div
    className="separator"
  />
</div>
`;
