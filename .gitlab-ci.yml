image: python:2.7

stages:
  - test
  - push_to_master
  - build
  - deploy_to_dev
  - test_on_dev
  - deploy_to_uat
  - deploy_to_prod

cache:
  paths:
    - assembl/static2/node_modules/
    - /usr/local/share/.cache/yarn/v2

test_frontend:
  stage: test
  except:
    - master
  image: node:8
  before_script:
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - cd assembl/static2
    - yarn
  script:
    - yarn run test
    - yarn run eslint
    - yarn run stylelint
    - yarn run flow --quiet

test_integration_and_ui:
  stage: test_on_dev
  image: node:8
  before_script:
    - apt-get update -qq
    # install chrome dependencies
    - apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git clone https://github.com/bluenove/assembl-tests
    - cd assembl-tests
    - yarn
    # fetch data required for e2e tests
    - scp $UI_TESTS_DATA_PATH data.js
  script:
    # run integration tests
    - yarn jest tests/integration
    # run each ui test one by one
    - yarn runinband

build_wheel:
  # TODO: urlmetadata
  stage: build
  only:
    - add_build_job
  before_script:
    - apt-get update -qq
    - apt-get remove -yqq cmdtest
    - apt-get install -yqq build-essential python-dev pkg-config automake bison flex gperf gawk graphviz
    - apt-get install -yqq apt-transport-https libpq-dev libmemcached-dev libzmq3-dev libxslt1-dev libffi-dev libhiredis-dev libxml2-dev libssl-dev libreadline-dev libxmlsec1-dev libgraphviz-dev
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - wget -qO- https://deb.nodesource.com/setup_8.x | bash -
    - apt-get install -yqq nodejs yarn
    - apt-get autoclean -qq && apt-get autoremove -qq && rm -rf /var/lib/apt/lists/*
    - pip install -r requirements.in
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - pip install --upgrade bumpversion
    - pip install --upgrade twine
    - git config --global user.email "cedric.messiant@gmail.com"
    - git config --global user.name "CÃ©dric Messiant"
    - git remote add github git@github.com:assembl/assembl.git
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git fetch github
  script:
    # compile v1 stylesheets
    - cd ${CI_PROJECT_DIR}/assembl/static/js
    - yarn
    - ./node_modules/.bin/gulp sass
    - ./node_modules/.bin/node-sass --source-map -r -o ../widget/card/app/css --source-map ../widget/card/app/css ../widget/card/app/scss
    - ./node_modules/.bin/node-sass --source-map -r -o ../widget/video/app/css --source-map ../widget/video/app/css ../widget/video/app/scss
    - ./node_modules/.bin/node-sass --source-map -r -o ../widget/session/css --source-map ../widget/session/css ../widget/session/scss

    # compile v1 javascript
    - ./node_modules/.bin/gulp libs
    - ./node_modules/.bin/gulp browserify:prod
    - ./node_modules/.bin/gulp build:test

    # compile v2 javascript
    - cd ${CI_PROJECT_DIR}/assembl/static2
    - yarn
    - yarn run build
    - rm -rf node_modules

    # compile messages
    - cd ${CI_PROJECT_DIR}
    - python setup.py compile_catalog
    - python assembl/scripts/po2json.py

    - rm -rf ${CI_PROJECT_DIR}/assembl/static/js/node_modules

    # bump the version, merge to master
    - git checkout -b bumpversion
    - bumpversion minor
    - git checkout -B tmp_master_for_ci_cd bumpversion
    - git branch -d bumpversion
    - git pull --rebase github tmp_master_for_ci_cd
    - git push github tmp_master_for_ci_cd
    - git checkout add_build_job
    - git merge tmp_master_for_ci_cd --no-edit -m "Merge new version"
    - git push github add_build_job

    # create the wheel and upload to pypi
    - cd ${CI_PROJECT_DIR}/
    - rm -rf dist build assembl.egg-info
    - python setup.py bdist_wheel
    - twine upload -u bluenove --skip-existing dist/*
