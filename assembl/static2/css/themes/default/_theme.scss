/*
  ASSEMBL DEFAULT THEME
  If you want to create a new theme, it is recommended that your theme SCSS file uses `@import` of this default theme file (for example, `@import "../../../default/_theme.scss";`), so if a default theme variable is not overriden in your theme (for example a variable which would have been added in Assembl code after the creation of your theme), the SCSS will still compile, and the variable will have the default value.
*/

@import "../../variables.scss";

/*
  Local theme variables
  Ranked from light to dark

  You can define here any variable that you want. This can be useful if you want several theme variables to have the same value.
  Example:
  In this Local theme variables section, you would add:
  $th_local_brand_logo_red: $FF0000;
  And in the Global theme variables section, you would redefine:
  $first-color: $th_local_brand_logo_red;
  $title1-dark-color: $th_local_brand_logo_red;

  Variables in this section should only be used within this current theme file. NEVER refer to these color variables in other SCSS files.
*/

$green: #8DC4B3;
$yellow: #f0ab2b;
$cyan: #0095b2;
$cyan-light: #d1eef6;
$opacity-cyan: rgba(0, 140, 166, .5);
$min-opacity-cyan: rgba(0, 140, 166, .1);


/*
  Global theme variables
  You can redefine here any of the default theme variables. Theme variables are used in the entire SCSS infrastructure. Theme variables which are not redefined by a theme will keep their default value, which is defined in css/themes/default/_theme.scss and in css/variables.scss.
*/

$first-color: $cyan;
$first-color-light: $cyan-light;
$second-color: $green;
$third-color: $cyan;
$opacity-color: $opacity-cyan;
$min-opacity-color: $min-opacity-cyan;
