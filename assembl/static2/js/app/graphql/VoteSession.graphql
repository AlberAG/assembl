#import "./fragments/VoteSession.graphql"

fragment tokenVoteSpecification on TokenVoteSpecification {
  id
  voteSessionId
  titleEntries {
    ...langStringEntry
  }
  instructionsEntries {
    ...langStringEntry
  }
  exclusiveCategories
  tokenCategories {
    id
    totalNumber
    typename
    titleEntries {
      ...langStringEntry
    }
    color
  }
}

fragment numberGaugeVoteSpecification on NumberGaugeVoteSpecification {
  id
  voteSessionId
  titleEntries {
    ...langStringEntry
  }
  instructionsEntries {
    ...langStringEntry
  }
  minimum
  maximum
  nbTicks
  unit
}

fragment gaugeVoteSpecification on GaugeVoteSpecification {
  id
  voteSessionId
  titleEntries {
    ...langStringEntry
  }
  instructionsEntries {
    ...langStringEntry
  }
  choices {
    id
    value
    labelEntries {
      ...langStringEntry
    }
  }
}

query VoteSession($discussionPhaseId: Int!, $lang: String!) {
  voteSession(discussionPhaseId: $discussionPhaseId) {
    id
    ...voteSessionGlobals
    ...voteSessionLangstringsEntries
    title(lang: $lang)
    subTitle(lang: $lang)
    instructionsSectionTitle(lang: $lang)
    instructionsSectionContent(lang: $lang)
    propositionsSectionTitle(lang: $lang)
    proposals {
      ... on Idea {
        id
        title(lang: $lang)
        description(lang: $lang)
        titleEntries {
          ...langStringEntry
        }
        descriptionEntries {
          ...langStringEntry
        }
        order
      }
      modules: voteSpecifications {
        ...tokenVoteSpecification
        ...numberGaugeVoteSpecification
        ...gaugeVoteSpecification
      }
    }
    modules: voteSpecifications {
      ...tokenVoteSpecification
      ...numberGaugeVoteSpecification
      ...gaugeVoteSpecification
    }
  }
}
